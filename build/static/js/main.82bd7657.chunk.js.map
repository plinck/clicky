{"version":3,"sources":["components/Navigation/Navigation.js","components/Articles/Article.js","components/Articles/Articles.js","components/Dashboard/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","elem","document","querySelector","M","Sidenav","init","edge","inDuration","react_default","a","createElement","className","id","react_router_dom","to","href","data-target","React","Component","Article","_this","clickArticle","event","wasClicked","console","log","concat","clickImage","handleMouseOver","e","target","pageX","currentTarget","handleMouseOut","favsClasses","saved","image","onClick","bind","src","alt","Articles","loadImages","articles","toConsumableArray","dataJSON","setState","newArticles","state","map","article","_this2","info","i","key","Articles_Article","Dashboard","name","components_Articles_Articles","App","email","components_Navigation_Navigation","react_router","exact","path","render","components_Dashboard_Dashboard","Boolean","window","location","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.82bd7657.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nclass Navigation extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        let elem = document.querySelector(\".sidenav\");\n        M.Sidenav.init(elem, {\n            edge: \"left\",\n            inDuration: 250\n        });\n    }\n\n    render() {\n        return (\n            // <!--  NAV -->\n            <div>\n                <ul className=\"sidenav\" id=\"mobile-links\">\n                    <Link to=\"/\" className=\"brand-logo\"><i className=\"material-icons\">blur_circular</i>Home</Link>\n                </ul>\n                <nav className=\"nav-wrapper indigo\">\n                    <div className=\"container\">\n                        <a href=\"/\" className=\"brand-logo center hide-on-large-only\">Clicky</a>\n                        <a href=\"/\" className=\"brand-logo hide-on-med-and-down\"><i className=\"material-icons\">blur_circular</i>Clicky</a>\n                        <a href=\"#!\" className=\"sidenav-trigger\" data-target=\"mobile-links\">\n                            <i className=\"material-icons\">menu</i>\n                        </a>\n                        <ul className=\"right hide-on-med-and-down\">\n                            <li><Link to=\"/\">Dashboard</Link></li>\n                        </ul>\n                    </div>\n                </nav>\n            </div>\n            // <!--  END NAV -->\n        );\n    }\n}\n\nexport default Navigation;","import React from 'react';\n\nclass Article extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.favsClasses = 'material-icons';\n\n        if (props.saved){\n            this.favsClasses += ' red';\n        }    \n    }\n\n    // Save this article to MongoDB\n    clickArticle = (event) => {\n        // Call node to save article\n        if (this.props.wasClicked) {\n            console.log(`Already clicked: ${this.props.id}`);\n        }\n        this.props.clickImage(this.props.id);\n    }\n\n    handleMouseOver = (e) => {\n        console.log(e.target, e.pageX);\n        e.currentTarget.className = 'material-icons red';\n    }\n\n    handleMouseOut = (e) => {\n        console.log(e.target, e.pageX);\n        e.currentTarget.className = this.favsClasses;\n    }\n\n    render() {      \n        // decontruct props\n        let { image } =  this.props;\n        \n        return ( \n            <div className=\"card\">\n                <div className=\"card-image\">\n                    <img onClick={this.clickArticle.bind(this)} className=\"materialboxed responsive-img\" src={image} alt=\"\" />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Article;","import React from 'react';\nimport Article from './Article';\nimport dataJSON from \"./images.json\";\n\nclass Articles extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            articles: [\n            ]\n        };\n    }\n\n    componentDidMount () {\n        this.loadImages();\n    }\n    \n    loadImages = () => {\n        const articles = [...dataJSON];\n    \n        this.setState({articles: articles});\n    }\n\n    clickImage = (id) => {\n        // find the image clicked\n        console.log(`clicked: ${id}`);\n        // Set state to clicked\n        let newArticles = this.state.articles.map( article => {\n            if (article.id === id) {\n                article.wasClicked = true;\n            }\n            return article;\n          })\n\n        this.setState({articles: newArticles});\n    }\n        \n    render() {\n        return (\n            <div className=\"row\">\n            {this.state.articles.map((info, i) => {\n                return(\n                    <div key={info.id} className=\"col s12 m4 l3\">\n                        <Article\n                        clickImage={this.clickImage.bind(info.id)}\n                        id={info.id}\n                        wasClicked={info.wasClicked}\n                        image={info.image}\n                        />\n                    </div>\n                    );\n            })}\n            </div>\n        );\n    }\n}\n\nexport default Articles;","import React from 'react';\nimport Articles from '../Articles/Articles';\n\nclass Dashboard extends React.Component {\n    render() {\n        return ( \n            <div>\n                <div className=\"row\">\n                    <div className=\"col s12 m12 l12\">\n                        <div className=\"card\">\n                            <div className=\"card-content\">\n                                <span className=\"flow-text card-title\">Dashboard - Welcome {this.props.name}</span>\n                                <p>Click image to guess</p>\n                                <p>try not to guess the same one twice</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col s12 m12 l12\">\n                        <Articles />     \n                    </div> \n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Dashboard;","import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"Paul\",\n      email: \"paul.linck@gmail.com\"\n    };\n  }\n\n  render() {\n    return (\n        <Router>\n            <div className=\"container\">\n                <Navigation />\n                <Route\n                    exact path=\"/\"\n                    render={() => (\n                    <Dashboard {...this.state} />\n                    )}\n                /> \n            </div>\n        </Router>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}